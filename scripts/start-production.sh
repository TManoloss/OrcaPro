#!/bin/bash

# Script para iniciar todos os servi√ßos em modo produ√ß√£o
echo "üöÄ Iniciando OrcaPro em modo produ√ß√£o..."

# Navegar para o diret√≥rio do projeto
cd "$(dirname "$0")"

# Parar containers existentes se houver
echo "üì¶ Parando containers existentes..."
sudo docker compose down 2>/dev/null || true

# Construir as imagens se necess√°rio
echo "üî® Construindo imagens Docker..."
sudo docker compose build --no-cache

# Iniciar todos os servi√ßos em background
echo "üöÄ Iniciando todos os servi√ßos..."
sudo docker compose up -d

# Aguardar um pouco para os servi√ßos inicializarem
echo "‚è≥ Aguardando servi√ßos inicializarem..."
sleep 15

# Verificar status dos servi√ßos
echo "üìä Status dos servi√ßos:"
sudo docker compose ps

# Verificar health checks
echo "üè• Verificando health checks..."
sudo docker compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "‚úÖ Servi√ßos iniciados! Verifique os status acima."
echo ""
echo "üìã URLs dispon√≠veis:"
echo "  - API Gateway: http://localhost:8000"
echo "  - Auth Service: http://localhost:8001"
echo "  - Transaction Service: http://localhost:8002"
echo "  - AI Service: http://localhost:8003"
echo "  - Notification Service: http://localhost:8004"
echo "  - Grafana: http://localhost:3000"
echo "  - Prometheus: http://localhost:9090"
echo "  - Jaeger: http://localhost:16686"
echo "  - RabbitMQ: http://localhost:15672"
echo ""

# Verificar logs de inicializa√ß√£o
echo "üìù √öltimos logs de inicializa√ß√£o:"
sudo docker compose logs --tail=10
